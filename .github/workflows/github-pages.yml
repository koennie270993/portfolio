name: Build and deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install npm dependencies
        run: npm ci
      
      - name: Build with webpack
        run: |
          NODE_ENV=production npm run build:webpack
          echo "TypeScript bundle built successfully"
          ls -la js/
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      
      - name: Install Jekyll dependencies
        run: bundle install
      
      - name: Update Jekyll configuration
        run: |
          # Ensure js directory is properly configured for Jekyll
          echo "Making sure js directory is included in Jekyll build"
          cat _config.yml | grep "include:" -A 10
          
      - name: Build Jekyll site
        run: |
          # Force-include js directory in Jekyll build
          bundle exec jekyll build --trace
          
          # Verify the bundle.js was included
          echo "Verifying bundle.js was included in the build:"
          find _site -name "bundle.js" || echo "bundle.js not found in _site!"
          
          # Make sure the target directory exists in _site
          mkdir -p _site/js/
          
          # Force copy the bundle files to the _site directory
          echo "Ensuring bundle.js files are in the _site directory:"
          cp -f js/bundle.js _site/js/
          cp -f js/bundle.js.map _site/js/ || echo "No source map found"
          
          # Verify the copied files
          ls -la _site/js/
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: _site
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true 